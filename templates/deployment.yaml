apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 4
  labels:
    EntandoApp: {{ .Values.appName }}
  name: {{ .Values.appName }}-deployment
  namespace: {{ .Values.nameSpace }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      EntandoApp: {{ .Values.appName }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        EntandoApp: {{ .Values.appName }}
      name: {{ .Values.appName }}-pod
    spec:
      containers:
      - env:
        - name: APPBUILDERINTEGRATIONENABLED
          value: "false"
        - name: KEYCLOAK_ENABLED
          value: "true"
        - name: KEYCLOAK_REALM
          value: {{ .Values.kcRealm }}
        - name: KEYCLOAK_PUBLIC_CLIENT_ID
          value: entando-web
        - name: KEYCLOAK_AUTH_URL
          value: {{ .Values.kcUrl }}
        - name: KEYCLOAK_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: clientSecret
              name: {{ .Values.appName }}-secret
              optional: false
        - name: KEYCLOAK_CLIENT_ID
          valueFrom:
            secretKeyRef:
              key: clientId
              name: {{ .Values.appName }}-secret
              optional: false
        - name: PORTDB_URL
          value: {{ .Values.portDbUrl }}
        - name: PORTDB_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: {{ .Values.appName }}-portdb-secret
              optional: false
        - name: PORTDB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: {{ .Values.appName }}-portdb-secret
              optional: false
        - name: PORTDB_CONNECTION_CHECKER
          value: org.jboss.jca.adapters.jdbc.extensions.mysql.MySQLValidConnectionChecker
        - name: PORTDB_EXCEPTION_SORTER
          value: org.jboss.jca.adapters.jdbc.extensions.mysql.MySQLExceptionSorter
        - name: SERVDB_URL
          value: {{ .Values.servDbUrl }}
        - name: SERVDB_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: {{ .Values.appName }}-servdb-secret
              optional: false
        - name: SERVDB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: {{ .Values.appName }}-servdb-secret
              optional: false
        - name: SERVDB_CONNECTION_CHECKER
          value: org.jboss.jca.adapters.jdbc.extensions.mysql.MySQLValidConnectionChecker
        - name: SERVDB_EXCEPTION_SORTER
          value: org.jboss.jca.adapters.jdbc.extensions.mysql.MySQLExceptionSorter
        - name: SERVER_SERVLET_CONTEXT_PATH
          value: /
        - name: CONNECTION_CONFIG_ROOT
          value: /etc/entando/secrets
        - name: KUBERNETES_NAMESPACE
          value: {{ .Values.nameSpace }}
        - name: ENTANDO_WEB_CONTEXT
          value: /
        - name: JGROUPS_CLUSTER_PASSWORD
          value: {{ randAlphaNum 10 }}
        - name: JGROUPS_JOIN_TIMEOUT
          value: "3000"
        - name: REDIS_ACTIVE
          value: "{{ .Values.redisActive }}"
        # - name: REDIS_ADDRESS
        #   value: {{ .Values.redisAddress }}
        - name: REDIS_ADDRESSES
          value: {{ .Values.redisAddresses }}
        image: {{ .Values.image }}
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 1
          httpGet:
            path: /api/health
            port: 8080
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 3
        name: server-container
        ports:
        - containerPort: 8080
          name: server-port
          protocol: TCP
        - containerPort: 8888
          name: ping
          protocol: TCP
        - containerPort: 7600
          name: ping2
          protocol: TCP
        readinessProbe:
          failureThreshold: 1
          httpGet:
            path: /api/health
            port: 8080
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          requests:
            memory: "2Gi"
            cpu: "600m"
          limits:
            memory: "4Gi"
            cpu: "1"
        startupProbe:
          failureThreshold: 11
          httpGet:
            path: /api/health
            port: 8080
            scheme: HTTP
          periodSeconds: 48
          successThreshold: 1
          timeoutSeconds: 5
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /entando-data
          name: {{ .Values.appName }}-server-volume
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 185
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      volumes:
      - name: {{ .Values.appName }}-server-volume
        persistentVolumeClaim:
          claimName: {{ .Values.appName }}-server-pvc